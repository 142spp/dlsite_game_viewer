사용자 편의성 증대    
- [P2] 게임상세정보 페이지 태그를 하이퍼링크 형태로 + 제거,추가 용이하게
- [P3] 플레이타임, 마지막 플레이 시간 구현 
- [P4] 폴더 뿐 아니라 압축파일까지 지원
- [P4] 그리드(현재구현) + 리스트형태로 보기
- [P2] 우클릭 컨텍스트 메뉴 - 웹사이트 방문, 세이브폴더 열기,  추가

최적화
- [P3] 취소 토큰(CancellationToken) 지원 추가로 장시간 작업 제어 기능 개선

심미성 증대
- [P2] UI 디자인 전반적 개선
- [P3] ResourceDictionary를 활용한 테마 적용 개선

아키텍처 개선
- [P3] 단위 테스트 및 통합 테스트 추가

데이터 관리 개선
- [P4] 오픈소스 압축 파일 라이브러리(SharpCompress 등) 통합
- [P4] FolderScannerService 확장하여 압축 파일 내부 스캔 지원

기타 개선사항
- [P2] 집중화된 오류 처리 서비스 구현
- [P3] NLog/Serilog 로깅 시스템 추가
- [P4] 리소스 파일을 통한 다국어 지원 시스템
- [P3] 사용자 설정 페이지 및 JSON 기반 설정 저장 기능

# P1 (최우선)

## 필터(검색) 개선
- 정규식을 통한 고급 검색 기능 ?
- 검색 히스토리 저장 기능
- 여러개 검색 기능

# P2 (중요)
## 게임상세정보 페이지 태그 시스템
- TagControl 사용자 정의 컨트롤 개발
- 태그 추가/제거를 위한 Command 구현
- 태그 클릭 시 검색 페이지로 이동하는 네비게이션
- 태그 데이터베이스 테이블 설계

## 우클릭 컨텍스트 메뉴
- ContextMenu 컨트롤 구현
- Process.Start를 사용한 외부 프로그램 실행
- 파일 시스템 접근을 위한 권한 처리
- 메뉴 아이템 동적 생성

## 집중화된 오류 처리 서비스
- IErrorHandler 인터페이스 정의
- 전역 예외 처리기 구현
- 사용자 친화적인 오류 메시지
- 오류 로깅 및 보고 시스템

# P3 (중간)
## 취소 토큰(CancellationToken) 지원
- 비동기 작업에 CancellationTokenSource 통합
- 진행 중인 작업 취소 UI 구현
- 작업 상태 모니터링
- 리소스 정리 로직

## ResourceDictionary를 활용한 테마 적용
- 테마별 ResourceDictionary 분리
- 동적 테마 전환 기능
- 사용자 정의 테마 지원
- 테마 설정 저장

## 단위 테스트 및 통합 테스트
- xUnit 또는 NUnit 테스트 프레임워크 사용
- Moq를 사용한 모의 객체 생성
- 테스트 커버리지 분석
- CI/CD 파이프라인 통합

## NLog/Serilog 로깅 시스템
- 로깅 레벨 설정
- 파일 및 데이터베이스 로깅
- 로그 로테이션
- 로그 뷰어 구현

## 사용자 설정 페이지
- JSON 설정 파일 구조 설계
- 설정 변경 이벤트 처리
- 설정 UI 구현
- 설정 백업/복원 기능

# P4 (낮음)
## 압축파일 지원
- SharpCompress 라이브러리 통합
- 압축 파일 스캐너 구현
- 임시 파일 추출 및 관리
- 메모리 사용량 최적화

## 그리드/리스트 뷰 전환
- DataTemplate 선택자 구현
- 뷰 모드 전환 애니메이션
- 사용자 선호도 저장
- 반응형 레이아웃

## 다국어 지원 시스템
- 리소스 파일 기반 번역
- 문화권 감지 및 전환
- 동적 언어 전환
- 번역 관리 시스템

## FolderScannerService 확장
- 인터페이스 기반 설계
- 플러그인 아키텍처
- 병렬 처리 최적화
- 에러 복구 메커니즘
